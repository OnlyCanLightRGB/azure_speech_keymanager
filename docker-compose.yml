services:
  app:
    build: .
    ports:
      - "0.0.0.0:3000:3000"
      - "0.0.0.0:3019:3019"
    env_file:
      - .env.docker
    environment:
      # 覆盖.env.docker中的特定配置
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-}
    depends_on:
      mysql_azkm:
        condition: service_healthy
      redis_azkm:
        condition: service_healthy
    volumes:
      - ./logs:/app/logs
      - ./uploads:/app/uploads
      - ./backups:/app/backups
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "wget --no-verbose --tries=1 --spider http://localhost:$$PORT/api/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s
    networks:
      - azkm_network

  mysql_azkm:
    image: mysql:8.0
    command: --skip-ssl --default-authentication-plugin=mysql_native_password
    environment:
      - MYSQL_ROOT_PASSWORD=rootpassword
      - MYSQL_DATABASE=azure_speech_keymanager
      - MYSQL_USER=azure_speech_keymanager
      - MYSQL_PASSWORD=azure_speech_keymanager
    volumes:
      - mysql_azkm_data:/var/lib/mysql
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "azure_speech_keymanager", "-pazure_speech_keymanager"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - azkm_network

  redis_azkm:
    image: redis:7-alpine
    volumes:
      - redis_azkm_data:/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 10s
    networks:
      - azkm_network

networks:
  azkm_network:
    driver: bridge

volumes:
  mysql_azkm_data:
  redis_azkm_data:
